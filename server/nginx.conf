user www-data;
worker_processes 2;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

error_log  /var/log/nginx/error.log error;

worker_rlimit_nofile 4096;
events {
    worker_connections 2048;
}

http {
  log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host";

  access_log /var/log/nginx/access.log ltsv;


    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # keepalive_timeout 120;
    keepalive_timeout 0;
    client_max_body_size 10m;

    access_log /var/log/nginx/access.log;


    # TLS configuration
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    include conf.d/*.conf;
    # include sites-enabled/*.conf;

  # pythonとのキープアライブ
  upstream backend {
    # server 127.0.0.1:8000;
    server 192.168.137.200:8000;
    server 192.168.137.250:8000;
    keepalive 2048;
    # worker_connectionに合わせる 
  }

  server {
      listen 80;
      server_name tomoyanp;
      location / {
          # proxy_pass http://unix:/run/unicorn.sock;
          proxy_pass http://backend;
      }

      root /home/ubuntu/go/src/github.com/isucon/isucon9-qualify/webapp/public/;
      # location ~ \.(htm|html|css|js|jpg|png|gif|ico) {
      # location ~ \.(css|jpg|png|gif|ico) {
      location /static/ {
        expires 24h;
        add_header Cache-Control public;
            
        open_file_cache max=100;
        gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
        gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
        gzip_disable "msie6";
        gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
        gzip_vary on;
      }

      location /upload/ {
        expires 24h;
        add_header Cache-Control public;
            
        open_file_cache max=100;
        gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
        gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
        gzip_disable "msie6";
        gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
        gzip_vary on;
      }

  }


}


